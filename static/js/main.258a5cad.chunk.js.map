{"version":3,"sources":["Components/ResultWindow/ResultWindow.module.css","Components/CheckBox/CheckBox.module.css","Components/Input/Input.tsx","Components/CheckBox/CheckBox.tsx","Components/Button/Button.tsx","Components/ResultWindow/ResultWindow.tsx","api.ts","Components/ProgressBar/ProgressBar.tsx","App.tsx","reportWebVitals.ts","index.tsx","Components/Input/Input.module.css","Components/Button/Button.module.css","Components/ProgressBar/ProgressBar.module.css"],"names":["module","exports","Input","props","className","style","inputContainer","input","type","value","inputText","onChange","onChangeInputValue","placeholder","focusBorder","React","memo","CheckBox","container","pureMaterialCheckbox","checked","spanClassName","Button","button","onClick","children","ResultWindow","resultWindow","filterWords","length","map","el","index","instance","axios","create","baseURL","ProgressBar","progress","progressBar","App","useState","data","setData","setFilterWord","setInputText","isRegister","setIsRegister","showProgressBar","setShowProgressBar","useCallback","event","currentTarget","onChangeHandler","onClickFilterLength","filter","onClickSubStringValue","x","every","y","includes","toLowerCase","useEffect","get","then","res","catch","alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.258a5cad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultWindow\":\"ResultWindow_resultWindow__1d6hk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CheckBox_container__1xBFd\",\"pureMaterialCheckbox\":\"CheckBox_pureMaterialCheckbox__1ws7T\",\"input\":\"CheckBox_input__3Nuei\"};","import React, {ChangeEvent} from 'react';\r\nimport style from \"./Input.module.css\";\r\n\r\ntype InputPropsType = {\r\n    inputText: string\r\n    onChangeInputValue: (event: ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nconst Input: React.FC<InputPropsType> = (props) => {\r\n    return <div className={style.inputContainer}>\r\n        <input className={style.input} type={'text'} value={props.inputText} onChange={props.onChangeInputValue} placeholder={'Введите искомое слово'}/>\r\n        <span className={style.focusBorder}/>\r\n    </div>\r\n};\r\n\r\nexport default React.memo(Input);\r\n","import React, {ChangeEvent} from 'react';\r\nimport style from \"./CheckBox.module.css\";\r\n\r\ntype CheckBoxPropsType = {\r\n    checked: boolean\r\n    onChange: (event: ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nconst CheckBox: React.FC<CheckBoxPropsType> = (props) => {\r\n    return <div className={style.container}>\r\n        <label className={style.pureMaterialCheckbox}>\r\n            <input className={style.input} type={'checkbox'} checked={props.checked} onChange={props.onChange}/>\r\n            <span className={style.spanClassName}> Поиск с регистром </span>\r\n        </label>\r\n    </div>\r\n};\r\n\r\nexport default React.memo(CheckBox);\r\n\r\n\r\n","import React from 'react';\r\nimport style from \"./Button.module.css\";\r\n\r\ntype ButtonsPropsType = {\r\n    onClick: () => void\r\n    children: string\r\n}\r\n\r\nconst Button: React.FC<ButtonsPropsType> = (props) => {\r\n    return <div className={style.container}>\r\n        <button className={style.button} onClick={props.onClick}> {props.children} </button>\r\n    </div>\r\n};\r\n\r\nexport default React.memo(Button);\r\n","import React from 'react';\r\nimport style from './ResultWindow.module.css'\r\n\r\ntype ResultWindowPropsType = {\r\n    filterWords: string[]\r\n}\r\n\r\nconst ResultWindow: React.FC<ResultWindowPropsType> = (props) => {\r\n    return <div className={style.resultWindow}>Выводится результат: {props.filterWords.length !== 0 ? props.filterWords.map((el, index) => <span\r\n        key={index}> {index}.{el}; </span>) : 'Нет слова'}\r\n    </div>\r\n};\r\n\r\nexport default React.memo(ResultWindow);\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://cors-anywhere.herokuapp.com/https://www.mrsoft.by/data.json',\r\n})\r\n\r\n//Использовал https://cors-anywhere.herokuapp.com/ чтобы обойти политику безопасности CORS, т.к я не могу слать запрос с другого домена\r\n// если сервер не предоставил такую возможность\r\n\r\ntype ResponseType = {\r\n    data:string[]\r\n}\r\n\r\nexport const api = () => {\r\n    return instance.get<ResponseType>(``)\r\n}\r\n","import React from \"react\";\r\nimport style from \"./ProgressBar.module.css\";\r\n\r\n\r\ntype ProgressBarTextPropsType = {\r\n\r\n};\r\n\r\nexport const ProgressBar: React.FC<ProgressBarTextPropsType> = () => {\r\n    // const loadingValue = {\r\n    //     width: '100%'\r\n    // }\r\n    return <div className={style.progress}>\r\n        <span className={style.progressBar} />\r\n    </div>\r\n}\r\n\r\nexport default ProgressBar;\r\n","import React, {ChangeEvent, useCallback, useEffect, useState} from 'react';\nimport './App.css';\nimport Input from \"./Components/Input/Input\";\nimport CheckBox from \"./Components/CheckBox/CheckBox\";\nimport Button from \"./Components/Button/Button\";\nimport ResultWindow from \"./Components/ResultWindow/ResultWindow\";\nimport {api} from \"./api\";\nimport ProgressBar from \"./Components/ProgressBar/ProgressBar\";\n\nfunction App() {\n    const [data, setData] = useState<string[]>([])\n    let [filterWords, setFilterWord] = useState<string[]>([])\n    const [inputText, setInputText] = useState<string>('')\n    const [isRegister, setIsRegister] = useState<boolean>(false)\n    const [showProgressBar, setShowProgressBar] = useState<boolean>(false)\n\n    const onChangeInputValue = useCallback((event: ChangeEvent<HTMLInputElement>) => setInputText(event.currentTarget.value), [])\n    const onChangeHandler = useCallback((event: ChangeEvent<HTMLInputElement>) => setIsRegister(event.currentTarget.checked), [])\n    const onClickFilterLength = useCallback(() => setFilterWord(data.filter(el => el.length > +inputText)), [data, inputText])\n    const onClickSubStringValue = useCallback(() => {\n        isRegister\n            ? setFilterWord(data.filter(x => [inputText].every(y => x.includes(y))))\n            : setFilterWord(data.filter(x => [inputText.toLowerCase()].every(y => x.toLowerCase().includes(y.toLowerCase()))))\n    }, [data, inputText, isRegister])\n\n    useEffect(() => {\n        setShowProgressBar(true)\n        api()\n            .then(res => {\n                setData(res.data.data)\n                setShowProgressBar(false)\n            })\n            .catch(() => {\n                alert('Something wrong')\n            })\n    }, [])\n\n    return <div className={'wrapper'}>\n        {showProgressBar ? <ProgressBar/> : null}\n        <div className={'container'}>\n            <Input inputText={inputText} onChangeInputValue={onChangeInputValue}/>\n            <CheckBox checked={isRegister} onChange={onChangeHandler}/>\n            <Button onClick={onClickFilterLength}>Фильтр по длине слова</Button>\n            <Button onClick={onClickSubStringValue}>Фильтр по подстроке</Button>\n            <ResultWindow filterWords={filterWords}/>\n        </div>\n    </div>\n\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"Input_inputContainer__3XdeT\",\"input\":\"Input_input__2bSVj\",\"focusBorder\":\"Input_focusBorder__10sg-\",\"has-content\":\"Input_has-content__yF87V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Button_container__2jY5g\",\"button\":\"Button_button__1EXhZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progress\":\"ProgressBar_progress__1XvCN\",\"progressBar\":\"ProgressBar_progressBar__2khEx\",\"progress-animation\":\"ProgressBar_progress-animation__1Dn2Q\"};"],"sourceRoot":""}